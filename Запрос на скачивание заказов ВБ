import requests
import pandas as pd
from datetime import date, datetime, timedelta
import os

# Часть 1 скачать первые 80000 строк

# URL метода и API ВБ 
url = "https://statistics-api.wildberries.ru/api/v1/supplier/orders"
# Метод предоставляет список заказов на ВБ макс 80000 стр в 1 запросе
headers = {
    "Authorization": "хххх",  # замените на ваш токен
    "User-Agent": "Mozilla/5.0",
    "Accept": "application/json"
}

params = {
    "dateFrom": '2025-01-01' # дата с которой забираем данные
}

response = requests.get(url, headers=headers, params=params)

# Запрос
data = response.json()  # data — список словарей
# Преобразуем список словарей в DataFrame
df = pd.DataFrame(data)

    
# Сохраняем в Excel файл
df.to_excel(r'\\...\Заказы_WB_ГТ_2025.xlsx', index=False) # указываем путь где будем сохранять файл
print(df.head())

# Часть 2 Заказы ВБ  с даты последней записи по тек.момент
# код находит последнюю максимальную дату и дополняет файл следующими 80000 стр
accum_file = r'\\...\Заказы_WB_ГТ_2025.xlsx'

def get_last_date_from_file(filepath):
    if not os.path.exists(filepath):
        return None
    df = pd.read_excel(filepath)
    if 'lastChangeDate' not in df.columns:
        return None
    df['lastChangeDate'] = pd.to_datetime(df['lastChangeDate'])
    return df['lastChangeDate'].max()

last_date = get_last_date_from_file(accum_file) #--- Находим последнюю запись с max датой ---
# date_from = last_date + timedelta(seconds=0.1)
date_from_str = last_date.strftime('%Y-%m-%dT%H:%M:%S')
print(f"Запрашиваем данные с {date_from_str}")

url = "https://statistics-api.wildberries.ru/api/v1/supplier/orders"
headers = {
    "Authorization": "хххх",  # замените на ваш токен
    "User-Agent": "Mozilla/5.0",
    "Accept": "application/json"
}
params = {
    "dateFrom": date_from_str
}

response = requests.get(url, headers=headers, params=params)
response.raise_for_status()

data = response.json()
df_new = pd.DataFrame(data)

if df_new.empty:
    print("Новых данных нет.")
else:
    print(f"Получено новых записей: {len(df_new)}")
    if os.path.exists(accum_file):
        df_existing = pd.read_excel(accum_file)
        # Просто дописываем новые данные в конец
        df_combined = pd.concat([df_existing, df_new], ignore_index=True)
    else:
        df_combined = df_new

    df_combined.to_excel(accum_file, index=False)
    print(f"Данные дозаписаны в {accum_file}")
    
# Удаляем дубли строк по которым есть и заказ и отмена заказа
# import pandas as pd

df = pd.read_excel(accum_file)

# Если 'lastChangeDate' не в datetime, преобразуем
df['lastChangeDate'] = pd.to_datetime(df['lastChangeDate'], errors='coerce')
df['date'] = pd.to_datetime(df['date'], errors='coerce').dt.date

# Для каждого srid оставляем строку с максимальной датой lastChangeDate
idx = df.groupby('srid')['lastChangeDate'].idxmax()

df_filtered = df.loc[idx].reset_index(drop=True)

# Подсчитываем, сколько строк удалено
deleted_count = len(df) - len(df_filtered)

print(f"Удалено строк: {deleted_count}")
print(f"Осталось строк: {len(df_filtered)}")

df_filtered.to_excel(accum_file, index=False)
